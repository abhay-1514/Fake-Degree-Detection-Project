app.get("/api/ethereum/all-details", async (req, res) => {
    try {
        const details_all = await contract.methods.getAllStudentDetails().call();
        
        // Check if any data was returned
        if (!details_all || details_all.length === 0) {
            return res.status(404).json({ status: 404, message: "No Details Found" });
        }

        // Assuming each inner array contains student details, we'll pick the first one
        const studentData = details_all[0];

        // Extract data from the array elements
        const [rollNo, name, marks, deenPermission, registrarPermission, VCPermission, hashcode] = studentData;

        // Create the detobj1 object
        const detobj1 = {
            numroll: Number(rollNo),
            name,
            nummarks: Number(marks),
            deenPermission,
            registrarPermission,
            VCPermission,
            hashcode,
        };

        // Send a successful response with the data
        res.status(200).json({ status: 200, detobj1, message: "Details Exist" });
    } catch (error) {
        // Log the error for debugging purposes
        console.error(error);

        // Send an error response
        res.status(500).json({ status: 500, message: "Internal Server Error" });
    }
});

app.get("/api/ethereum/all-details",async (req,res)=>{
    try{
        const details_all = await contract.methods.getAllStudentDetails().call();
        console.log("details_all:", details_all);
        const{rollNo,name,marks,deenPermission,registrarPermission,VCPermission,hashcode}=details_all;
        const numroll = Number(rollNo)
        const nummarks = Number(marks)
        const detobj1 ={
            numroll,name,nummarks,deenPermission,registrarPermission,VCPermission,hashcode
        }
        //console.log(details_all)
        res.status(200).json({status:200,detobj1,message:"Details Exist"})
    }catch(error){
        res.status(500).json({status:500,message:"Details doesn't Exist"})
        console.error(error)
    }
})

app.get("/api/ethereum/all-details", async (req, res) => {
    try {
        const details_all = await contract.methods.getAllStudentDetails().call();
        
        // Check if any data was returned
        if (!details_all || details_all.length === 0) {
            return res.status(404).json({ status: 404, message: "No Details Found" });
        }

        // Create an array to store student details
        const studentDetailsArray = [];

        // Loop through each student's data
        details_all.forEach(studentData => {
            const [rollNo, name, marks, deenPermission, registrarPermission, VCPermission, hashcode] = studentData;

            // Create a detobj1 object for the student
            const detobj1 = {
                numroll: Number(rollNo),
                name,
                nummarks: Number(marks),
                deenPermission,
                registrarPermission,
                VCPermission,
                hashcode,
            };

            // Add the detobj1 object to the array
            studentDetailsArray.push(detobj1);
        });

        // Send a successful response with the array of student details
        res.status(200).json({ status: 200, studentDetailsArray, message: "Details Exist" });
    } catch (error) {
        // Log the error for debugging purposes
        console.error(error);

        // Send an error response
        res.status(500).json({ status: 500, message: "Internal Server Error" });
    }
});
